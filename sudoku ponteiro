#include<stdio.h>
#include<stdlib.h>
#define N 9
#ifdef __unix__
    char * s = "clear";
#else
    char *s = "cls";
#endif

int linha , coluna , numero;
int *l,*c,*n;

int facil[N][N] = {{ 0, 6, 0, 1, 0, 4, 0, 5,  0},
 { 0, 0, 8, 3, 0, 5, 6, 0, 0},
 { 2, 0, 0, 0, 0, 0, 0, 0, 1},
 { 8, 0, 0, 4, 0, 7, 0, 0, 6},
 { 0, 0, 6, 0, 0, 0, 3, 0, 0},
 { 7, 0, 0, 9, 0, 1, 0, 0, 4},
 { 5, 0, 0, 0, 0, 0, 0, 0, 2},
 { 0, 0, 7, 2, 0, 6, 9, 0, 0},
 { 0, 4, 0, 5, 0, 8, 0, 7, 0}};


int medio[N][N] = {{ 0, 0, 0, 1, 0, 4, 0, 0,  0},
   { 0, 0, 8, 0, 0, 5, 0, 0, 0},
   { 0, 0, 0, 0, 0, 0, 0, 0, 0},
   { 0, 0, 0, 4, 0, 0, 0, 0, 6},
   { 0, 0, 6, 0, 0, 0, 3, 0, 0},
   { 0, 0, 0, 0, 0, 1, 0, 0, 0},
   { 5, 0, 0, 0, 0, 0, 0, 0, 2},
   { 0, 0, 7, 0, 0, 0, 9, 0, 0},
   { 0, 0, 0, 5, 0, 0, 0, 7, 0}};


int dificil[N][N] =  {{ 0, 0, 0, 0, 0, 4, 0, 0,  0},
   { 0, 0, 8, 0, 0, 0, 0, 0, 0},
   { 0, 0, 0, 0, 0, 0, 0, 0, 0},
   { 0, 0, 0, 0, 0, 0, 0, 0, 0},
   { 0, 0, 0, 0, 0, 0, 3, 0, 0},
   { 0, 0, 0, 0, 0, 0, 0, 0, 0},
   { 0, 0, 0, 0, 0, 0, 0, 0, 2},
   { 0, 0, 0, 0, 0, 0, 0, 0, 0},
   { 0, 0, 0, 5, 0, 0, 0, 0, 0}};


int principal[N][N];



  void inicio_do_jogo(){
    // Menu inicial do jogo
    int numero;
    //system(s);
    printf("Bem vindo ao sudoku!\n");
    printf("1| Novo jogo\n");
    printf("0| Regras\n");
    scanf("%d",&numero);
    switch(numero){
      case 1:{
        // o jogo ira iniciar
        //system(s);
    printf("Boa sorte!\n");
    dificuldade();
    }
    break;
      case 0:{
      // regras do jogo
     //system(s);
      printf("O objetivo do jogador %c completar um grid 9x9 (colunas verticais e linhas\n",130);
      printf("horizontais), preenchendo os espa%cos vazios com n%cmeros de 1 a 9. Por%cm, um\n",135,163,130);
      printf("dado n%cmero n%co pode ser repetido na mesma coluna, linha ou bloco. Em\n",163,198);
      printf("outras palavras, basta o jogador preencher o grid com n%cmeros sem repeti-los\n",163);
      printf("na horizontal, vertical ou nos quadrados menores (de 9 c%clulas, quadrados de\n",130);
      printf("tamanho 3x3).\n\n\n\n");
      printf("Caso queira desistir do jogo digite '0' para linha, coluna, n%cmero.\n\n",163);
      int x;
      printf("Digite qualquer n%cmero para voltar ao menu.\n",163);
      scanf("%d",&x);
      switch(x){
        default:{
      return inicio_do_jogo();
      break;
    }
    }
    }
    }
    }

    void dificuldade(){
      // menu para a escolha da dificuldade do jogo.
      //system(s);
      int num,i,j;
      printf("Escolha a dificuldade do jogo.\n");
      printf("1| F%ccil\n",160);
      printf("2| M%cdio\n",130);
      printf("3| Dif%ccil\n",161);
      scanf("%d",&num);
      // o switch serve para adicionar os valores da dificuldade escolhida na matriz do jogo.
      switch(num){
        case 1:{
        for(i=0;i<N;i++){
            for(j=0;j<N;j++)
            principal[i][j]= facil[i][j];
          }}
            geratela();
        break;

        case 2:{
        for(i=0;i<N;i++){
            for(j=0;j<N;j++)
            principal[i][j]= medio[i][j];
          }}
            geratela();
      break;

      case 3:{
      for(i=0;i<N;i++){
          for(j=0;j<N;j++)
          principal[i][j]= dificil[i][j];
        }}
          geratela();
    break;

    default:
            dificuldade();
            break;

}
}

        void desenha_grade() {
          //essa função serve para desenhar o quadro do sudoku
          int i,j;
  printf("   1  2  3   4  5  6   7  8  9   \n");
  printf(" +---------+---------+---------+ \n");
    for (i = 0; i < N; i++) {
      printf("%d|", i+1);
	        for (j = 0; j < N; j++) {
	           if (principal[i][j] != 0)
	            printf(" %d ", principal[i][j]);
	           else
	            printf("   ");
	            if (j % 3 == 2)
	             printf("|");
	}
	     if (i % 3 == 2)
	       printf("\n +---------+---------+---------+ ");
	printf("\n");
  }
}

		void geratela(){
	// essa função serve para adicionar as jogadas
	int linha,coluna,numero,remove_linha,remove_coluna,escolha;

	//system(s);
   desenha_grade();

   printf("Digite 1 para adicionar uma jogada.\nDigite 0 para remover uma jogada.\n");
   scanf("%d",&escolha);

   switch(escolha) {
	   case 0: { printf("Digite uma linha: ");
 			scanf("%d", &remove_linha);

   			printf("Digite uma coluna: ");
   			scanf("%d", &remove_coluna);
			principal[remove_linha-1][remove_coluna-1] = 0;
		   }
		   return geratela();
		   break;
	case 1:

   printf("Digite uma linha: ");
   scanf("%d", &linha);
   l=&linha;
   printf("%d\n",*l);

   printf("Digite uma coluna: ");
   scanf("%d", &coluna);
   c=&coluna;
   printf("%d\n",*c);

   printf("Digite o n%cmero: ",163);
   scanf("%d", &numero);
   n=&numero;
   printf("%d\n",*n);
   jogo();
   if(linha==0 && coluna==0 && numero==0) return inicio_do_jogo();
   break;

	default:{
			printf("N%cmero inv%clido.\n",163,160);
			return geratela();
		}
		break;
   //jogo();
}
}
      int coordenadavalida(int linha, int coluna){

        int cont=0;

        printf("%d\n%d\n%d\n",*l,*c,*n);

  if(*l>=0 && *l <9) cont++;
  if(*c>=0 && *c <9) cont++;

	if(cont == 2) return 1;
  else return 0;
}


      int numerovalido(int numero)
{
  if(*n>0 && *n <=9)
	 return 1;
   else
	  return 0;

}
      int checar(int linha, int coluna) {
	 if (principal[linha][coluna]==0)
		 return 1;
	 else
		 return 0;
}



      int tenta_colocar_linha(int linha, int coluna, int numero) {
        int i,cont=0;

      for(i=0;i<N;i++){
        if(numero != principal[i][*c]) cont++;
      }
      if(cont == N ) return 1;
      else return 0;
    }



    int tenta_colocar_coluna(int linha, int coluna, int numero) {
      int i,cont=0;

    for(i=0;i<N;i++){
      if(numero != principal[*l][i]) cont++;
    }
    if(cont == N ) return 1;
    else return 0;
  }


  int tenta_colocar_matriz(int linha, int coluna, int numero){

    int testelinha,testecoluna,i,j,cont;

    if(*l-1<=0 || *l-1<=2){
      if(*c-1<=0 || *c-1<=2) testelinha=*l; testecoluna=*c;
      if(*c-1<=3 || *c-1<=5) testelinha=*l; testecoluna=*c;
      if(*c-1<=6 || *c-1<=8) testelinha=*l; testecoluna=*c;
    }
    if(*l-1<=3 || *l-1<=5){
      if(*c-1<=0 || *c-1<=2) testelinha=*l; testecoluna=*c;
      if(*c-1<=3 || *c-1<=5) testelinha=*l; testecoluna=*c;
      if(*c-1<=6 || *c-1<=8) testelinha=*l; testecoluna=*c;
    }
    if(*l-1<=6 || *l-1<=8){
      if(*c-1<=0 || *c-1<=2) testelinha=*l; testecoluna=*c;
      if(*c-1<=3 || *c-1<=5) testelinha=*l; testecoluna=*c;
      if(*c-1<=6 || *c-1<=8) testelinha=*l; testecoluna=*c;
    }
    for(i=testelinha-1;i<=testelinha+1;i++){
      for(j=testecoluna-1;j<=testecoluna+1;j++){
        if(*n != principal[i][j]) cont++;
      }
}
    if(cont == N) return 1;
    else return 0;
  }


      void escreve(int linha, int coluna, int numero) {
	         principal[*l][*c]=*n;
}
void jogo(){

  int flag=0;

if(coordenadavalida(*l-1 , *c-1)==1){flag++;
printf("coordenadavalida\n");
printf("%d\n%d\n%d\n",*l,*c,*n);
}
  if(numerovalido(*n)==1){ flag++;
    printf("numerovalido\n");
printf("%d\n%d\n%d\n",*l,*c,*n);
  }
  if(checar(*l-1, *c-1)==1){ flag++;
    printf("checar\n");
printf("%d\n%d\n%d\n",*l,*c,*n);
  }
//  if(tenta_colocar_linha(linha-1, coluna-1, numero)==1){ flag++;
  //  printf("tenta_colocar_linha\n");
//printf("%d\n%d\n%d\n",*l,*c,*n);
//  }
  if(tenta_colocar_coluna(*l-1, *c-1, *n)==1){ flag++;
  printf("tenta_colocar_coluna\n");
printf("%d\n%d\n%d\n",*l,*c,*n);
}
  if(tenta_colocar_matriz(*l, *c, *n)==1) flag++;
  printf("tenta_colocar_matriz\n");
  printf("%d\n%d\n%d\n",*l,*c,*n);

  if(flag == 5) escreve(*l-1, *c-1, *n);
  else printf("N%co foi poss%cvel fazer esta jogada.\n",198,161);
}



  int main(){
    inicio_do_jogo();
    geratela();
    return 0;
}
