#include<stdio.h>
#include<stdlib.h>
#define N 9

int facil[N][N] = {{ 0, 6, 0, 1, 0, 4, 0, 5,  0},
 { 0, 0, 8, 3, 0, 5, 6, 0, 0},
 { 2, 0, 0, 0, 0, 0, 0, 0, 1},
 { 8, 0, 0, 4, 0, 7, 0, 0, 6},
 { 0, 0, 6, 0, 0, 0, 3, 0, 0},
 { 7, 0, 0, 9, 0, 1, 0, 0, 4},
 { 5, 0, 0, 0, 0, 0, 0, 0, 2},
 { 0, 0, 7, 2, 0, 6, 9, 0, 0},
 { 0, 4, 0, 5, 0, 8, 0, 7, 0}};


int medio[N][N] = {{ 0, 0, 0, 1, 0, 4, 0, 0,  0},
   { 0, 0, 8, 0, 0, 5, 0, 0, 0},
   { 0, 0, 0, 0, 0, 0, 0, 0, 0},
   { 0, 0, 0, 4, 0, 0, 0, 0, 6},
   { 0, 0, 6, 0, 0, 0, 3, 0, 0},
   { 0, 0, 0, 0, 0, 1, 0, 0, 0},
   { 5, 0, 0, 0, 0, 0, 0, 0, 2},
   { 0, 0, 7, 0, 0, 0, 9, 0, 0},
   { 0, 0, 0, 5, 0, 0, 0, 7, 0}};


int dificil[N][N] =  {{ 0, 0, 0, 0, 0, 4, 0, 0,  0},
   { 0, 0, 8, 0, 0, 0, 0, 0, 0},
   { 0, 0, 0, 0, 0, 0, 0, 0, 0},
   { 0, 0, 0, 0, 0, 0, 0, 0, 0},
   { 0, 0, 0, 0, 0, 0, 3, 0, 0},
   { 0, 0, 0, 0, 0, 0, 0, 0, 0},
   { 0, 0, 0, 0, 0, 0, 0, 0, 2},
   { 0, 0, 0, 0, 0, 0, 0, 0, 0},
   { 0, 0, 0, 5, 0, 0, 0, 0, 0}};


int principal[N][N];



  void inicio_do_jogo(){
    // Menu inicial do jogo
    int numero;
    printf("Bem vindo ao sudoku!\n");
    printf("1| Novo jogo\n");
    printf("0| Regras\n");
    scanf("%d",&numero);
    switch(numero){
      case 1:
        // o jogo ira iniciar
    system("clear");
    printf("Boa sorte!\n");
    dificuldade();
    break;
      case 0:
      // regras do jogo
      system("clear");
      printf("O objetivo do jogador é completar um grid 9×9 (colunas verticais e linhas\n");
      printf("horizontais), preenchendo os espaços vazios com números de 1 a 9. Porém, um\n");
      printf("dado número não pode ser repetido na mesma coluna, linha ou bloco. Em\n");
      printf("outras palavras, basta o jogador preencher o grid com números sem repeti-los\n");
      printf("na horizontal, vertical ou nos quadrados menores (de 9 células, quadrados de\n");
      printf("tamanho 3×3).\n\n\n\n");
      return inicio_do_jogo();
    }

  }

    void dificuldade(){
      // menu para a escolha da dificuldade do jogo.
      system("clear");
      int num,i,j;
      printf("Escolha a dificuldade do jogo.\n");
      printf("1| Fácil\n");
      printf("2| Médio\n");
      printf("3| Difícil\n");
      scanf("%d",&num);
      // o switch serve para adicionar os valores da dificuldade escolhida na matriz do jogo.
      switch(num){
        case 1:{
        for(i=0;i<N;i++){
            for(j=0;j<N;j++)
            principal[i][j]= facil[i][j];
          }}
            desenha_grade();
        break;

        case 2:{
        for(i=0;i<N;i++){
            for(j=0;j<N;j++)
            principal[i][j]= medio[i][j];
          }}
            desenha_grade();
      break;

      case 3:{
      for(i=0;i<N;i++){
          for(j=0;j<N;j++)
          principal[i][j]= dificil[i][j];
        }}
            desenha_grade();
    break;

    default:{ printf("Número inválido. Tente outro.\n");
            dificuldade();
            break;
  }
}
}

        void desenha_grade() {
          int i,j;
  printf("   1  2  3   4  5  6   7  8  9   \n");
  printf(" +---------+---------+---------+ \n");
    for (i = 0; i < N; i++) {
      printf("%d|", i+1);
	      // printf("|");
	        for (j = 0; j < N; j++) {
	           if (principal[i][j] != 0)
	            printf(" %d ", principal[i][j]);
	           else
	            printf("   ");
	            if (j % 3 == 2)
	             printf("|");
	}
	     if (i % 3 == 2)
	       printf("\n +---------+---------+---------+ ");
	printf("\n");
  }
}





  int main(){
    inicio_do_jogo();
    return 0;
  }
